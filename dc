#!/bin/bash
##################################
######### DESCRIPTION ############
# This script goes into ~/bin and is used to control my docker-compose (dc) stack
# There are a few assumptions:
# - Docker-compose files live in ~/gandalf_docker/<stack_name>/
# - Environment file is located in ~/gandalf_docker/.env
# Goals:
# - You are able to run the script from anywhere
# - You are able to use tab-completion (provided by dc-completion.bash)
# Provides the following main functions:
# - up      - bring up all stacks, an individual stack or a container
# - down    - brings down all stacks or an individual stack
# - stop    - stops all stacks, an individual stack, or a container
# - restart - restart all stacks, a stack, or a container
# - network - create the macvlan network that is needed
##################################

###### VARIABLES
export DC_DIR="/home/download/gandalf_docker"
export ENV="${DC_DIR}/.env"
export DC_CMD=`which docker-compose`
export DC_COMMAND="${DC_CMD} --env-file ${ENV}"

###### FUNCTIONS
# USAGE
function show_usage (){
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    printf "Usage: $0 [options [parameters]]\n"
    printf "\n"
    printf "Options:\n"
    printf " ${RED}up${NC}        Bring up a stack\n"
    printf " ${RED}down${NC}      Bring down a stack\n"
    printf " ${RED}start${NC}     Start one or more containers\n"
    printf " ${RED}stop${NC}      Stop one or more containers\n"
    printf " ${RED}restart${NC}   Restart one or more containers\n"
    printf " ${RED}network${NC}   Create the MacVLAN network\n"
    printf " ${RED}help${NC}      Print help\n"

return 0
}

# UP
function up(){
    if (( $2 == "all" )); then
        for compose in $(find ${DC_DIR} -name docker-compose.yml -printf '%h\n' | sort -u);
        do
            echo -e "\n$compose:"
            echo "cd $compose"
            echo "${DC_COMMAND} up -d"
            echo "cd -"
        done
    else
        STACK=$2
        echo "cd ${STACK}"
        echo "${DC_COMMAND} up -d"
        echo "cd -"
    fi
    }

# DOWN
function down(){
    for compose in $(find ${DC_DIR} -name docker-compose.yml -printf '%h\n' | sort -ur);
    do
        echo -e "\n$compose:"
        echo "cd $compose"
        echo "${DC_COMMAND} down"
        echo "cd -"
    done
    }

# START
function start(){
    echo "Starting the following container(s):"
    echo "${DC_COMMAND} start "
    }

# STOP
# Stop also removes the image
function stop(){
    echo "Stopping the following container(s):"
    echo "${DC_COMMAND} stop "
    }

# RESTART
# Restart is basically a stop and start in sequence
function restart(){
    echo "restart"
    stop
    start
    }

# NETWORK
function network(){
    echo "network"
    }

# Let's start some cases
case ${1} in
# ----------- up ------------
    "up")
        up
        ;;

# ----------- down ------------
    "down")
        down
        ;;

# ----------- start ------------
    "start")
        start
        ;;

# ----------- stop ------------
    "stop")
        stop
        ;;

# ----------- restart ------------
    "restart")
        restart
        ;;

# ----------- network ------------
    "network")
        network
        ;;

    *)
        show_usage
        ;;
esac